{"version":3,"sources":["components/button.js","components/calculator.js","components/calculatorTitle.js","components/outputscreenrow.js","components/outputscreen.js","App.js","serviceWorker.js","index.js"],"names":["react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","Button","props","a","createElement","type","value","display","onClick","handleClick","Calculator","_this","Object","F_test_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","F_test_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","F_test_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","question","answer","bind","F_test_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","event","target","ans","eval","er","setState","undefined","str","substr","length","react__WEBPACK_IMPORTED_MODULE_6___default","className","_calculatorTitle__WEBPACK_IMPORTED_MODULE_8__","title","_outputscreen__WEBPACK_IMPORTED_MODULE_7__","_button__WEBPACK_IMPORTED_MODULE_9__","React","Component","CalculatorTitle","OutputScreenRow","react_default","readOnly","OutputScreen","outputscreenrow","App","calculator","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3a7cf1d2.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Button = (props) =>{\r\n    return(\r\n        <input type=\"button\" value={props.display}  onClick={props.handleClick}></input>\r\n    )\r\n}\r\nexport default Button;","import React from 'react';\r\nimport OutputScreen from './outputscreen';\r\nimport CalculatorTitle from './calculatorTitle';\r\nimport Button from './button'\r\n\r\n\r\nclass Calculator extends React.Component{\r\n    constructor(){\r\n        super();\r\n        \r\n        this.state = {\r\n            question : '',\r\n            answer: ''\r\n        }\r\n        this.handleClick=this.handleClick.bind(this);\r\n    }\r\n    handleClick(event){\r\n        const value=event.target.value;\r\n        switch(value)\r\n        {\r\n            case '=':\r\n            {\r\n                if(this.state.question!=='')\r\n                {\r\n                    var ans=''\r\n                    try\r\n                    {\r\n                        ans=eval(this.state.question);\r\n                    }\r\n                    catch(er)\r\n                    {\r\n                        this.setState({answer:\"math error\"});\r\n                    }\r\n                    if(ans===undefined)\r\n                    {\r\n                        this.setState({answer:\"math error\"});\r\n                    }\r\n                    else\r\n                        this.setState({answer:ans,question:''})\r\n                    break;\r\n                }\r\n                break;\r\n            }\r\n            case 'Clear':{\r\n                this.setState({question:'', answer:''});\r\n                break;\r\n            }\r\n            case 'Backspace':{\r\n                var str=this.state.question;\r\n                str=str.substr(0,str.length-1);\r\n                this.setState({question:str});\r\n                break;\r\n            }\r\n            default:{\r\n                this.setState({question:this.state.question+=value});\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    render()\r\n    {\r\n        return(\r\n            <div className=\"calc\">\r\n                <CalculatorTitle title=\"Sidd's Calculator\"/>\r\n                <OutputScreen question={this.state.question} answer={this.state.answer}/>\r\n                <div className=\"b-row\">\r\n                    <Button display=\"Clear\" handleClick={this.handleClick} />\r\n                    <Button display=\"Backspace\" handleClick={this.handleClick}/>\r\n                    <Button display=\".\" handleClick={this.handleClick}/>\r\n                    <Button display=\"/\" handleClick={this.handleClick}/>\r\n                </div>\r\n                <div className=\"b-row\">\r\n                    <Button display=\"7\" handleClick={this.handleClick} />\r\n                    <Button display=\"8\" handleClick={this.handleClick}/>\r\n                    <Button display=\"9\" handleClick={this.handleClick}/>\r\n                    <Button display=\"*\" handleClick={this.handleClick}/>\r\n                </div>\r\n                <div className=\"b-row\">\r\n                    <Button display=\"4\" handleClick={this.handleClick}/>\r\n                    <Button display=\"5\" handleClick={this.handleClick}/>\r\n                    <Button display=\"6\" handleClick={this.handleClick}/>\r\n                    <Button display=\"-\" handleClick={this.handleClick}/>\r\n                </div>\r\n                <div className=\"b-row\">\r\n                    <Button display=\"1\" handleClick={this.handleClick}/>\r\n                    <Button display=\"2\" handleClick={this.handleClick}/>\r\n                    <Button display=\"3\" handleClick={this.handleClick}/>\r\n                    <Button display=\"+\" handleClick={this.handleClick}/>\r\n                </div>\r\n                <div className=\"b-row\">\r\n                    <Button display=\"0\" handleClick={this.handleClick}/>\r\n                    <Button display=\"=\" handleClick={this.handleClick}/>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n        \r\n    }\r\n}\r\nexport default Calculator;","import React from 'react'\r\n\r\nconst CalculatorTitle = (props)=> {\r\n    return(\r\n        <div className=\"calculator-title\">\r\n            { props.title }\r\n        </div>\r\n\r\n    )\r\n    \r\n}\r\nexport default CalculatorTitle;","import React from 'react'\r\n\r\nconst OutputScreenRow = (props) =>{\r\n    return(\r\n        <div className=\"screen-row\">\r\n            <input type=\"text\" readOnly value={props.value}></input>\r\n        </div>\r\n    )\r\n}\r\nexport default OutputScreenRow;","import React from 'react'\r\nimport OutputScreenRow from './outputscreenrow'\r\n\r\nconst OutputScreen = (props)=>{\r\n    return(\r\n        <div className=\"screen\">\r\n            <OutputScreenRow value={props.question}/>\r\n            <OutputScreenRow value={props.answer}/>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default OutputScreen; ","import React from 'react';\nimport Calculator from './components/calculator'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calculator/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}